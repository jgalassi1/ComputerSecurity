key = '0100110001001111010101100100010101000011010100110100111001000100'
message = '1100101011101101101000100110010101011111101101110011100001110011'

# all the tables
pc1 = [56, 48, 40, 32, 24, 16, 8,
       0, 57, 49, 41, 33, 25, 17,
       9, 1, 58, 50, 42, 34, 26,
       18, 10, 2, 59, 51, 43, 35,
       62, 54, 46, 38, 30, 22, 14,
       6, 61, 53, 45, 37, 29, 21,
       13, 5, 60, 52, 44, 36, 28,
       20, 12, 4, 27, 19, 11, 3]

pc2 = [13, 16, 10, 23, 0, 4,
       2, 27, 14, 5, 20, 9,
       22, 18, 11, 3, 25, 7,
       15, 6, 26, 19, 12, 1,
       40, 51, 30, 36, 46, 54,
       29, 39, 50, 44, 32, 47,
       43, 48, 38, 55, 33, 52,
       45, 41, 49, 35, 28, 31]

ip = [57, 49, 41, 33, 25, 17, 9, 1,
      59, 51, 43, 35, 27, 19, 11, 3,
      61, 53, 45, 37, 29, 21, 13, 5,
      63, 55, 47, 39, 31, 23, 15, 7,
      56, 48, 40, 32, 24, 16, 8, 0,
      58, 50, 42, 34, 26, 18, 10, 2,
      60, 52, 44, 36, 28, 20, 12, 4,
      62, 54, 46, 38, 30, 22, 14, 6]

e = [31,  0,  1,  2,  3,  4,
     3,  4,  5,  6,  7,  8,
     7,  8,  9, 10, 11, 12,
     11, 12, 13, 14, 15, 16,
     15, 16, 17, 18, 19, 20,
     19, 20, 21, 22, 23, 24,
     23, 24, 25, 26, 27, 28,
     27, 28, 29, 30, 31,  0]

p = [15,  6, 19, 20, 28, 11, 27, 16,
     0, 14, 22, 25,  4, 17, 30,  9,
     1,  7, 23, 13, 31, 26,  2,  8,
     18, 12, 29,  5, 21, 10,  3, 24]

fp = [39, 7, 47, 15, 55, 23, 63, 31,
      38, 6, 46, 14, 54, 22, 62, 30,
      37, 5, 45, 13, 53, 21, 61, 29,
      36, 4, 44, 12, 52, 20, 60, 28,
      35, 3, 43, 11, 51, 19, 59, 27,
      34, 2, 42, 10, 50, 18, 58, 26,
      33, 1, 41, 9, 49, 17, 57, 25,
      32, 0, 40, 8, 48, 16, 56, 24]

s = [[[14, 4, 13, 1, 2, 15, 11, 8, 3, 10, 6, 12, 5, 9, 0, 7],
      [0, 15, 7, 4, 14, 2, 13, 1, 10, 6, 12, 11, 9, 5, 3, 8],
      [4, 1, 14, 8, 13, 6, 2, 11, 15, 12, 9, 7, 3, 10, 5, 0],
      [15, 12, 8, 2, 4, 9, 1, 7, 5, 11, 3, 14, 10, 0, 6, 13]
      ], [
    [15, 1, 8, 14, 6, 11, 3, 4, 9, 7, 2, 13, 12, 0, 5, 10],
    [3, 13, 4, 7, 15, 2, 8, 14, 12, 0, 1, 10, 6, 9, 11, 5],
    [0, 14, 7, 11, 10, 4, 13, 1, 5, 8, 12, 6, 9, 3, 2, 15],
    [13, 8, 10, 1, 3, 15, 4, 2, 11, 6, 7, 12, 0, 5, 14, 9]
], [
    [10, 0, 9, 14, 6, 3, 15, 5, 1, 13, 12, 7, 11, 4, 2, 8],
    [13, 7, 0, 9, 3, 4, 6, 10, 2, 8, 5, 14, 12, 11, 15, 1],
    [13, 6, 4, 9, 8, 15, 3, 0, 11, 1, 2, 12, 5, 10, 14, 7],
    [1, 10, 13, 0, 6, 9, 8, 7, 4, 15, 14, 3, 11, 5, 2, 12]
], [
    [7, 13, 14, 3, 0, 6, 9, 10, 1, 2, 8, 5, 11, 12, 4, 15],
    [13, 8, 11, 5, 6, 15, 0, 3, 4, 7, 2, 12, 1, 10, 14, 9],
    [10, 6, 9, 0, 12, 11, 7, 13, 15, 1, 3, 14, 5, 2, 8, 4],
    [3, 15, 0, 6, 10, 1, 13, 8, 9, 4, 5, 11, 12, 7, 2, 14]
], [
    [2, 12, 4, 1, 7, 10, 11, 6, 8, 5, 3, 15, 13, 0, 14, 9],
    [14, 11, 2, 12, 4, 7, 13, 1, 5, 0, 15, 10, 3, 9, 8, 6],
    [4, 2, 1, 11, 10, 13, 7, 8, 15, 9, 12, 5, 6, 3, 0, 14],
    [11, 8, 12, 7, 1, 14, 2, 13, 6, 15, 0, 9, 10, 4, 5, 3]
], [
    [12, 1, 10, 15, 9, 2, 6, 8, 0, 13, 3, 4, 14, 7, 5, 11],
    [10, 15, 4, 2, 7, 12, 9, 5, 6, 1, 13, 14, 0, 11, 3, 8],
    [9, 14, 15, 5, 2, 8, 12, 3, 7, 0, 4, 10, 1, 13, 11, 6],
    [4, 3, 2, 12, 9, 5, 15, 10, 11, 14, 1, 7, 6, 0, 8, 13]
], [
    [4, 11, 2, 14, 15, 0, 8, 13, 3, 12, 9, 7, 5, 10, 6, 1],
    [13, 0, 11, 7, 4, 9, 1, 10, 14, 3, 5, 12, 2, 15, 8, 6],
    [1, 4, 11, 13, 12, 3, 7, 14, 10, 15, 6, 8, 0, 5, 9, 2],
    [6, 11, 13, 8, 1, 4, 10, 7, 9, 5, 0, 15, 14, 2, 3, 12]
], [
    [13, 2, 8, 4, 6, 15, 11, 1, 10, 9, 3, 14, 5, 0, 12, 7],
    [1, 15, 13, 8, 10, 3, 7, 4, 12, 5, 6, 11, 0, 14, 9, 2],
    [7, 11, 4, 1, 9, 12, 14, 2, 0, 6, 10, 13, 15, 3, 5, 8],
    [2, 1, 14, 7, 4, 10, 8, 13, 15, 12, 9, 0, 3, 5, 6, 11]
]]

p_key = [key[x] for x in pc1]
c0 = ''.join(p_key[:28])
d0 = ''.join(p_key[28:])

c = []
d = []
k = []

# get round keys
for i in range(16):
    # print(f'Shift {i+1}:')
    if i != 0 and i != 1 and i != 8 and i != 15:
        c0 = c0[1:] + c0[0]
        d0 = d0[1:] + d0[0]
    c0 = c0[1:] + c0[0]
    # print(f'c0: {c0}')
    c.append(c0)
    d0 = d0[1:] + d0[0]
    # print(f'd0: {d0}')
    d.append(d0)

for i in range(len(c)):
    ki = c[i]+d[i]
    k.append(''.join(ki[x] for x in pc2))

# for outputting round keys
# for i in range(len(k)):
#     print(f'K{i+1}: {k[i]}')

# ip
m = [message[x] for x in ip]
l0 = ''.join(m[:32])
r0 = ''.join(m[32:])

# first round
# left
l = [r0]
# e
e0 = ''.join(r0[x] for x in e)
e0 = [int(bit) for bit in e0]
k[0] = [int(bit) for bit in k[0]]
# xor
xor0 = ''.join([str(b ^ kb) for b, kb in zip(e0, k[0])])
xor0 = [int(bit) for bit in xor0]
# s
s0 = []
for i in range(8):
    row = 2*xor0[6*i] + xor0[6*i+5]
    col = 8*xor0[6*i+1]+4*xor0[6*i+2]+2*xor0[6*i+3]+xor0[6*i+4]
    s0 += [int(b) for b in format(s[i][row][col], '04b')]
s0 = ''.join(str(x) for x in s0)
p0 = ''.join(s0[x] for x in p)
# right side
r = [''.join([str(int(lb) ^ int(p0)) for lb, p0 in zip(l0, p0)])]
# the rest of the rounds
for i in range(1, 16):
    # left
    l.append(r[i-1])
    # e
    ei = ''.join(r0[x] for x in e)
    ei = [int(bit) for bit in ei]
    k[i] = [int(bit) for bit in k[i]]
    # xor
    xori = ''.join([str(b ^ kb) for b, kb in zip(ei, k[i])])
    xori = [int(bit) for bit in xori]
    # s
    si = []
    for j in range(8):
        row = 2*xori[6*j] + xori[6*j+5]
        col = 8*xori[6*j+1]+4*xori[6*j+2]+2*xori[6*j+3]+xori[6*j+4]
        si += [int(b) for b in format(s[j][row][col], '04b')]
    si = ''.join(str(x) for x in si)
    pi = ''.join(si[x] for x in p)
    # right
    r.append(''.join([str(int(lb) ^ int(pi)) for lb, pi in zip(l[i-1], pi)]))

end = r[15] + l[15]

for i in range(len(l)):
    print(f'l{i}: {l[i]}')
    print(f'r{i}: {r[i]}')

# output decrypted message
print(''.join(end[x] for x in fp))
